{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["\n// Helper function to perform deep merge of objects\nfunction deepMerge(target: any, source: any): any {\n  for (const key of Object.keys(source)) {\n    if (source[key] instanceof Object && key in target) {\n      Object.assign(source[key], deepMerge(target[key], source[key]));\n    }\n  }\n  Object.assign(target || {}, source);\n  return target;\n}\n\nexport function mergeSettings<T extends object>(defaultSettings: T, userSettings: Partial<T> = {}): T {\n  // Deep merge default settings with user settings\n  const mergedSettings = deepMerge({ ...defaultSettings }, userSettings);\n\n  return mergedSettings;\n}\n\n/**\n * Generates and appends a dynamic CSS style element based on the provided settings.\n * \n * @param settings - The settings containing the CSS variables to generate.\n * @param attribute - The data attribute used to apply the settings (e.g., \"font-size\").\n */\nexport function generateDynamicCSS(settings: any, attribute: string) {\n\n  // Remove existing dynamic styles\n  const existingStyleElement = document.getElementById(`a11y-dynamic-styles-${attribute}`);\n  if (existingStyleElement) {\n    existingStyleElement.remove();\n  }\n\n  const styleElement = document.createElement(\"style\");\n  styleElement.id = `a11y-dynamic-styles-${attribute}`;\n  \n  let cssText = \"\";\n\n  settings.options?.forEach((option: any) => {\n    let cssVariables = \"\";\n    option.values.forEach((variable: any) => {\n      const key = Object.keys(variable)[0];\n      const value = variable[key];\n      cssVariables += `${key}: ${value}; `;\n    });\n    cssText += `html[data-a11y-${attribute}=\"${option.label}\"] { ${cssVariables} } `;\n  });\n\n  styleElement.textContent = cssText;\n  document.head.appendChild(styleElement);\n}\n\n\n// Utility function to get all focusable elements within a container\nexport function getFocusableElements(container: HTMLElement): HTMLElement[] {\n  return Array.from(container.querySelectorAll<HTMLElement>(\n    'input[type=radio], button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n  ));\n}\n\n// Function to get the next focusable element in the a11y bar\nexport function getNextFocusableElement(triggerId: string, a11yBarId: string): HTMLElement | null {\n  const a11yBar = document.getElementById(a11yBarId);\n  const trigger = document.getElementById(triggerId) as HTMLElement;\n\n  if (!a11yBar || !trigger) return null;\n\n  const focusableElements = getFocusableElements(a11yBar);\n  const triggerIndex = focusableElements.indexOf(trigger);\n\n  if (triggerIndex === -1 || triggerIndex + 1 >= focusableElements.length) {\n    return null; // No next focusable element\n  }\n\n  return focusableElements[triggerIndex + 1];\n}\n"]}