{"version":3,"file":"fontSize.js","sourceRoot":"","sources":["../../../src/modules/fontSize.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement } from \"lit\";\nimport { property } from \"lit/decorators.js\";\nimport { GenericOption } from \"../settings/types\";\n\nexport interface FontSizeSettings {\n  options?: GenericOption[];\n  default?: GenericOption;\n}\n\nconst defaultFontSizeOptions: GenericOption[] = [\n  {\n    label: \"Default\",\n    values: [\n      { \"--a11y-font-size-modifier\": 1 },\n      { \"--a11y-line-height-modifier\": 1 },\n    ],\n  },\n  {\n    label: \"Large\",\n    values: [\n      { \"--a11y-font-size-modifier\": 1.2 },\n      { \"--a11y-line-height-modifier\": 1.125 },\n      { \"--a11y-spacing-modifier\": 1.125 },\n    ],\n  },\n  {\n    label: \"Larger\",\n    values: [\n      { \"--a11y-font-size-modifier\": 1.4 },\n      { \"--a11y-line-height-modifier\": 1.125 },\n      { \"--a11y-spacing-modifier\": 1.2 },\n    ],\n  },\n];\n\nexport const defaultFontSizeSettings: FontSizeSettings = {\n  options: defaultFontSizeOptions,\n  default: defaultFontSizeOptions[0],\n};\n\nclass FontSizeModule extends LitElement {\n  @property({ type: Object })\n  settings!: FontSizeSettings;\n\n  @property({ type: String })\n  currentFontSize: string = \"Default\";\n\n  @property({ type: Function })\n  updateFontSizeSetting!: (option: string) => void;\n\n  private availableFontSizes: string[];\n\n  private default: string = \"Default\";\n\n  constructor() {\n    super();\n    this.availableFontSizes = [];\n  }\n\n  createRenderRoot() {\n    return this; // disables shadow DOM\n  }\n\n  updated(changedProperties: Map<string | number | symbol, unknown>) {\n    if (changedProperties.has(\"settings\")) {\n      this.availableFontSizes =\n        this.settings.options?.map((option) => option.label) ?? [];\n      this.default = this.settings.default?.label ?? \"Default\";\n    }\n    if (changedProperties.has(\"currentFontSize\")) {\n      this.requestUpdate();\n    }\n  }\n\n  cycleFontSize = () => {\n    const currentIndex = this.availableFontSizes.indexOf(this.currentFontSize);\n    const nextIndex = (currentIndex + 1) % this.availableFontSizes.length;\n    const nextFontSize = this.availableFontSizes[nextIndex];\n    this.currentFontSize = nextFontSize;\n    this.updateFontSizeSetting(nextFontSize);\n  };\n\n  render() {\n    return html`\n      <li role=\"none\">\n        <button\n          type=\"button\"\n          @click=\"${this.cycleFontSize}\"\n          style=\"flex-direction: column;\"\n          role=\"menuitem\"\n          class=\"usa-button padding-y-105 gap-05 padding-x-05 usa-button--unstyled width-full ${this\n            .currentFontSize !== this.default\n            ? \"bg-a11y-active\"\n            : \"\"}\"\n          aria-label=\"Font size set to ${this.currentFontSize}\"\n        >\n          <svg\n            aria-hidden=\"true\"\n            role=\"img\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            style=\"--usa-button-icon-size:var(--usa-spacing-4)\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"2.25\"\n            stroke=\"currentColor\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          >\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M3 7v-2h13v2\" />\n            <path d=\"M10 5v14\" />\n            <path d=\"M12 19h-4\" />\n            <path d=\"M15 13v-1h6v1\" />\n            <path d=\"M18 12v7\" />\n            <path d=\"M17 19h2\" />\n          </svg>\n          ${this.settings.options?.find(\n            (option) => option.label === this.currentFontSize\n          )?.label ?? \"Text Size\"}\n        </button>\n      </li>\n    `;\n  }\n}\n\ncustomElements.define(\"font-size-module\", FontSizeModule);\n\nexport const fontSize = (\n  settings: FontSizeSettings,\n  updateFontSizeSetting: (option: string) => void,\n  selection: string | null\n) => html`\n  <font-size-module\n    .settings=\"${settings}\"\n    .updateFontSizeSetting=\"${updateFontSizeSetting}\"\n    .currentFontSize=\"${selection}\"\n  ></font-size-module>\n`;\n"]}